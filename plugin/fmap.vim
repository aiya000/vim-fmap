scriptencoding utf-8

if exists('g:loaded_fmap')
  finish
endif
let g:loaded_fmap = v:true

let g:fmap_default_mappings = {
  \ 'pb': '(',
  \ 'pe': ')',
  \ 'Pb': '{',
  \ 'Pe': '}',
  \ 'kb': '[',
  \ 'ke': ']',
  \ 'Kb': '<',
  \ 'Ke': '>',
  \ '.': '„ÄÇ',
  \ ',': '„ÄÅ',
  \ '!': 'ÔºÅ',
  \ '?': 'Ôºü',
  \ "'a": '„ÅÇ',
  \ "'i": '„ÅÑ',
  \ "'u": '„ÅÜ',
  \ "'e": '„Åà',
  \ "'o": '„Åä',
  \ "'ka": '„Åã',
  \ "'ki": '„Åç',
  \ "'ku": '„Åè',
  \ "'ke": '„Åë',
  \ "'ko": '„Åì',
  \ "'sa": '„Åï',
  \ "'si": '„Åó',
  \ "'shi": '„Åó',
  \ "'su": '„Åô',
  \ "'se": '„Åõ',
  \ "'so": '„Åù',
  \ "'ta": '„Åü',
  \ "'ti": '„Å°',
  \ "'tu": '„Å§',
  \ "'te": '„Å¶',
  \ "'to": '„Å®',
  \ "'na": '„Å™',
  \ "'ni": '„Å´',
  \ "'nu": '„Å¨',
  \ "'ne": '„Å≠',
  \ "'no": '„ÅÆ',
  \ "'ha": '„ÅØ',
  \ "'hi": '„Å≤',
  \ "'hu": '„Åµ',
  \ "'he": '„Å∏',
  \ "'ho": '„Åª',
  \ "'ma": '„Åæ',
  \ "'mi": '„Åø',
  \ "'mu": '„ÇÄ',
  \ "'me": '„ÇÅ',
  \ "'mo": '„ÇÇ',
  \ "'ya": '„ÇÑ',
  \ "'yu": '„ÇÜ',
  \ "'yo": '„Çà',
  \ "'ra": '„Çâ',
  \ "'ri": '„Çä',
  \ "'ru": '„Çã',
  \ "'re": '„Çå',
  \ "'ro": '„Çç',
  \ "'wa": '„Çè',
  \ "'wo": '„Çí',
  \ "'nn": '„Çì',
\ }

lockvar! g:fmap_default_mappings

let g:fmap_mappings = get(g:, 'fmap_mappings', copy(g:fmap_default_mappings))
let g:fmap_use_default_keymappings = get(g:, 'fmap_use_default_keymappings', v:true)
let g:fmap_escape_keys = get(g:, 'fmap_escape_keys', ['', ''])

nmap <expr> <Plug>(fmap-forward-f) fmap#shot(fmap#input_a_stroke(), 'f')
nmap <expr> <Plug>(fmap-backward-f) fmap#shot(fmap#input_a_stroke(), 'F')
nmap <expr> <Plug>(fmap-forward-t) fmap#shot(fmap#input_a_stroke(), 't')
nmap <expr> <Plug>(fmap-backward-t) fmap#shot(fmap#input_a_stroke(), 'T')

vmap <expr> <Plug>(fmap-forward-f) fmap#shot(fmap#input_a_stroke(), 'f')
vmap <expr> <Plug>(fmap-backward-f) fmap#shot(fmap#input_a_stroke(), 'F')
vmap <expr> <Plug>(fmap-forward-t) fmap#shot(fmap#input_a_stroke(), 't')
vmap <expr> <Plug>(fmap-backward-t) fmap#shot(fmap#input_a_stroke(), 'T')

omap <expr> <Plug>(fmap-forward-f) fmap#shot(fmap#input_a_stroke(), 'f')
omap <expr> <Plug>(fmap-backward-f) fmap#shot(fmap#input_a_stroke(), 'F')
omap <expr> <Plug>(fmap-forward-t) fmap#shot(fmap#input_a_stroke(), 't')
omap <expr> <Plug>(fmap-backward-t) fmap#shot(fmap#input_a_stroke(), 'T')

if g:fmap_use_default_keymappings
    nmap <localleader>f <Plug>(fmap-forward-f)
    nmap <localleader>F <Plug>(fmap-backward-f)
    nmap <localleader>t <Plug>(fmap-forward-t)
    nmap <localleader>T <Plug>(fmap-backward-t)

    vmap <localleader>f <Plug>(fmap-forward-f)
    vmap <localleader>F <Plug>(fmap-backward-f)
    vmap <localleader>t <Plug>(fmap-forward-t)
    vmap <localleader>T <Plug>(fmap-backward-t)

    omap <localleader>f <Plug>(fmap-forward-f)
    omap <localleader>F <Plug>(fmap-backward-f)
    omap <localleader>t <Plug>(fmap-forward-t)
    omap <localleader>T <Plug>(fmap-backward-t)
endif

command! -bar -nargs=+ FNoreMap call fmap#fnoremap(<f-args>)
